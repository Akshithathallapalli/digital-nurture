Control Structures
Scene-1
-- Write a PL/SQL block that loops through all customers, checks their age, and if they are above 60, apply a 1% discount to their current loan interest rates.
DECLARE
    CURSOR c1 IS SELECT cust_id, age, loan_intrst_rate FROM customer;
BEGIN
    FOR c IN c1 LOOP
        IF c.age > 60 THEN
            UPDATE customer
            SET loan_intrst_rate = loan_intrst_rate - (loan_intrst_rate * 0.01)
            WHERE cust_id = c.cust_id;
        END IF;
    END LOOP;
END;
/
Scene-2
Write a PL/SQL block that iterates through all customers and sets a flag IsVIP to TRUE for those with a balance over $10,000.
SET SERVEROUTPUT ON;
DECLARE
    CURSOR v1 IS SELECT customer_id, balance FROM customer;
BEGIN
    FOR v IN v1 LOOP
        IF v.balance > 10000 THEN
            UPDATE customer
            SET is_vip = 'TRUE'
            WHERE customer_id = v.customer_id;
        END IF;
    END LOOP;
END;
/
Scene-3
Write a PL/SQL block that fetches all loans due in the next 30 days and prints a reminder message for each customer.
SET SERVEROUTPUT ON;
DECLARE
    CURSOR CUR_LOANS IS
        SELECT L.LOANID, L.CUSTOMERID, C.NAME, L.ENDDATE
        FROM LOANS L
        JOIN CUSTOMERS C ON L.CUSTOMERID = C.CUSTOMERID
        WHERE L.ENDDATE BETWEEN SYSDATE AND SYSDATE + 30;
    
    V_LOAN_ID LOANS.LOANID%TYPE;
    V_CUSTOMER_ID LOANS.CUSTOMERID%TYPE;
    V_CUSTOMER_NAME CUSTOMERS.NAME%TYPE;
    V_END_DATE LOANS.ENDDATE%TYPE;
    V_FOUND BOOLEAN := FALSE;
BEGIN
    OPEN CUR_LOANS;
    LOOP
        FETCH CUR_LOANS INTO V_LOAN_ID, V_CUSTOMER_ID, V_CUSTOMER_NAME, V_END_DATE;
        EXIT WHEN CUR_LOANS%NOTFOUND;
        
        V_FOUND := TRUE;
        DBMS_OUTPUT.PUT_LINE('Reminder: Loan ' || V_LOAN_ID || ' for customer ' || V_CUSTOMER_NAME || ' (ID: ' || V_CUSTOMER_ID || ') is due on ' || TO_CHAR(V_END_DATE, 'YYYY-MM-DD'));
    END LOOP;
    CLOSE CUR_LOANS;

    IF NOT V_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('No loans are due within the next 30 days.');
    END IF;
END;
/
